{"version":3,"sources":["Bubble.jsx","Card.jsx","index.js"],"names":["Bubble","props","intervalId","useState","time","setTime","console","log","useEffect","setInterval","clearInterval","className","style","display","opacity","Card","allTimer","setAllTimer","timeRef","useRef","type","placeholder","ref","onClick","x","current","value","map","elem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAEe,SAASA,EAAOC,GAC7B,IAEIC,EAFJ,EAAsBC,mBAASF,EAAMG,MAArC,mBAAKA,EAAL,KAAWC,EAAX,KAcA,OAbAC,QAAQC,IAAIH,GAEZI,qBAAU,WAER,GADAF,QAAQC,IAAIH,GACC,IAATA,EAKF,OADAF,EAAaO,aAAY,kBAAMJ,EAAQD,EAAO,KAAI,KAC3C,kBAAMM,cAAcR,IAJ3BQ,cAAcR,KAMf,CAACE,IAGF,qBACEO,UAAU,uBACVC,MAAO,CACLC,QAAkB,IAATT,EAAa,OAAS,OAC/BU,QAAkB,IAATV,EAAa,EAAI,GAJ9B,SAOE,4BAAIA,MCQKW,MA9Bf,WACE,MAA8BZ,mBAAS,IAAvC,mBAAKa,EAAL,KAAeC,EAAf,KAEIC,EAAUC,mBACd,OACE,qBAAKR,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACA,sBAAKA,UAAU,gBAAf,UACE,uBAAOS,KAAK,OAAOC,YAAY,kBAAkBC,IAAKJ,IACtD,wBACEK,QAAS,WACP,IAAIC,EAAC,YAAOR,GACZC,EAAY,GAAD,mBAAKO,GAAL,CAAQ,cAACxB,EAAD,CAAQI,KAAMc,EAAQO,QAAQC,YAHrD,0BAUF,qBAAKf,UAAU,SAAf,SACGK,EAASW,KAAI,SAACC,GACb,OAAOA,aClBjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.466ad7af.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./bubble.css\";\r\nexport default function Bubble(props) {\r\n  let [time, setTime] = useState(props.time);\r\n  console.log(time);\r\n  let intervalId;\r\n  useEffect(() => {\r\n    console.log(time);\r\n    if (time === 0) {\r\n      clearInterval(intervalId);\r\n    } else {\r\n        // eslint-disable-next-line\r\n      intervalId = setInterval(() => setTime(time - 1), 1000);\r\n      return () => clearInterval(intervalId);\r\n    }\r\n  }, [time]);\r\n\r\n  return (\r\n    <div\r\n      className=\"circle bounce-effect\"\r\n      style={{\r\n        display: time === 0 ? \"none\" : \"flex\",\r\n        opacity: time === 1 ? 0 : 1,\r\n      }}\r\n    >\r\n      <p>{time}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { useRef, useState } from \"react\";\nimport Bubble from \"./Bubble\";\n\nfunction Card() {\n  let [allTimer, setAllTimer] = useState([]);\n\n  let timeRef = useRef();\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n      <div className=\"input-section\">\n        <input type=\"text\" placeholder=\"Enter number...\" ref={timeRef} />\n        <button\n          onClick={() => {\n            let x = [...allTimer];\n            setAllTimer([...x, <Bubble time={timeRef.current.value} />]);\n          }}\n        >\n          Add Timer\n        </button>\n      </div>\n\n      <div className=\"timers\">\n        {allTimer.map((elem) => {\n          return elem;\n        })}\n      </div>\n      </div>\n     \n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport Card from \"./Card\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Card />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}